use egui::{Key, PointerButton};
use smithay_client_toolkit::seat::keyboard::Keysym;

use crate::sctk;

pub fn keysym_to_key(sym: Keysym) -> Option<Key> {
    match sym {
        Keysym::Down => Some(Key::ArrowDown),
        Keysym::Left => Some(Key::ArrowLeft),
        Keysym::Right => Some(Key::ArrowRight),
        Keysym::Up => Some(Key::ArrowUp),
        Keysym::Escape => Some(Key::Escape),
        Keysym::Tab => Some(Key::Tab),
        Keysym::BackSpace => Some(Key::Backspace),
        Keysym::Return => Some(Key::Enter),
        Keysym::space => Some(Key::Space),
        Keysym::Insert => Some(Key::Insert),
        Keysym::Delete => Some(Key::Delete),
        Keysym::Home => Some(Key::Home),
        Keysym::End => Some(Key::End),
        Keysym::Prior => Some(Key::PageUp),
        Keysym::Next => Some(Key::PageDown),
        // Keysym::Copy => Key::Copy,
        // Keysym::Cut => Key::Cut,
        // Keysym::Paste => Key::Paste,
        Keysym::colon => Some(Key::Colon),
        Keysym::comma => Some(Key::Comma),
        Keysym::slash => Some(Key::Slash),
        Keysym::bar => Some(Key::Pipe),
        Keysym::question => Some(Key::Questionmark),
        Keysym::exclam => Some(Key::Exclamationmark),
        Keysym::bracketleft => Some(Key::OpenBracket),
        Keysym::bracketright => Some(Key::CloseBracket),
        Keysym::braceleft => Some(Key::OpenCurlyBracket),
        Keysym::braceright => Some(Key::CloseCurlyBracket),
        Keysym::grave => Some(Key::Backtick),
        Keysym::period => Some(Key::Period),
        Keysym::plus => Some(Key::Plus),
        Keysym::equal => Some(Key::Equals),
        Keysym::semicolon => Some(Key::Semicolon),
        Keysym::apostrophe => Some(Key::Quote),
        Keysym::_0 => Some(Key::Num0),
        Keysym::_1 => Some(Key::Num1),
        Keysym::_2 => Some(Key::Num2),
        Keysym::_3 => Some(Key::Num3),
        Keysym::_4 => Some(Key::Num4),
        Keysym::_5 => Some(Key::Num5),
        Keysym::_6 => Some(Key::Num6),
        Keysym::_7 => Some(Key::Num7),
        Keysym::_8 => Some(Key::Num8),
        Keysym::_9 => Some(Key::Num9),
        Keysym::a | Keysym::A => Some(Key::A),
        Keysym::b | Keysym::B => Some(Key::B),
        Keysym::c | Keysym::C => Some(Key::C),
        Keysym::d | Keysym::D => Some(Key::D),
        Keysym::e | Keysym::E => Some(Key::E),
        Keysym::f | Keysym::F => Some(Key::F),
        Keysym::g | Keysym::G => Some(Key::G),
        Keysym::h | Keysym::H => Some(Key::H),
        Keysym::i | Keysym::I => Some(Key::I),
        Keysym::j | Keysym::J => Some(Key::J),
        Keysym::k | Keysym::K => Some(Key::K),
        Keysym::l | Keysym::L => Some(Key::L),
        Keysym::m | Keysym::M => Some(Key::M),
        Keysym::n | Keysym::N => Some(Key::N),
        Keysym::o | Keysym::O => Some(Key::O),
        Keysym::p | Keysym::P => Some(Key::P),
        Keysym::q | Keysym::Q => Some(Key::Q),
        Keysym::r | Keysym::R => Some(Key::R),
        Keysym::s | Keysym::S => Some(Key::S),
        Keysym::t | Keysym::T => Some(Key::T),
        Keysym::u | Keysym::U => Some(Key::U),
        Keysym::v | Keysym::V => Some(Key::V),
        Keysym::w | Keysym::W => Some(Key::W),
        Keysym::x | Keysym::X => Some(Key::X),
        Keysym::y | Keysym::Y => Some(Key::Y),
        Keysym::z | Keysym::Z => Some(Key::Z),
        Keysym::F1 => Some(Key::F1),
        Keysym::F2 => Some(Key::F2),
        Keysym::F3 => Some(Key::F3),
        Keysym::F4 => Some(Key::F4),
        Keysym::F5 => Some(Key::F5),
        Keysym::F6 => Some(Key::F6),
        Keysym::F7 => Some(Key::F7),
        Keysym::F8 => Some(Key::F8),
        Keysym::F9 => Some(Key::F9),
        Keysym::F10 => Some(Key::F10),
        Keysym::F11 => Some(Key::F11),
        Keysym::F12 => Some(Key::F12),
        Keysym::F13 => Some(Key::F13),
        Keysym::F14 => Some(Key::F14),
        Keysym::F15 => Some(Key::F15),
        Keysym::F16 => Some(Key::F16),
        Keysym::F17 => Some(Key::F17),
        Keysym::F18 => Some(Key::F18),
        Keysym::F19 => Some(Key::F19),
        Keysym::F20 => Some(Key::F20),
        Keysym::F21 => Some(Key::F21),
        Keysym::F22 => Some(Key::F22),
        Keysym::F23 => Some(Key::F23),
        Keysym::F24 => Some(Key::F24),
        Keysym::F25 => Some(Key::F25),
        Keysym::F26 => Some(Key::F26),
        Keysym::F27 => Some(Key::F27),
        Keysym::F28 => Some(Key::F28),
        Keysym::F29 => Some(Key::F29),
        Keysym::F30 => Some(Key::F30),
        Keysym::F31 => Some(Key::F31),
        Keysym::F32 => Some(Key::F32),
        Keysym::F33 => Some(Key::F33),
        Keysym::F34 => Some(Key::F34),
        Keysym::F35 => Some(Key::F35),
        Keysym::Shift_L
        | Keysym::Shift_R
        | Keysym::Control_L
        | Keysym::Control_R
        | Keysym::Super_L
        | Keysym::Super_R => None,
        _ => {
            eprintln!("dont get it: {sym:?}; {:?}", sym.name());
            None
        }
    }
}

pub fn pointer_button_to_egui(button: u32) -> PointerButton {
    match button {
        sctk::seat::pointer::BTN_LEFT => PointerButton::Primary,
        sctk::seat::pointer::BTN_RIGHT => PointerButton::Secondary,
        sctk::seat::pointer::BTN_MIDDLE => PointerButton::Middle,
        sctk::seat::pointer::BTN_BACK => PointerButton::Extra1,
        sctk::seat::pointer::BTN_FORWARD => PointerButton::Extra2,
        _ => PointerButton::Primary,
    }
}
